{"ast":null,"code":"/**\n * The scene-manager module serves as an entry point to all scene-related activities, from initialization\n * to access to objects to anything else.\n *\n * The starter version of the scene manager is adapted from the introductory code provided by three.js.\n */\nimport { Scene, PerspectiveCamera, WebGLRenderer, AmbientLight, DirectionalLight } from 'three';\nimport * as GUI from 'dat.gui';\nimport Garnet from '../cast/garnet';\nimport Peridot from '../cast/peridot';\nclass MinMaxGUIHelper {\n  constructor(obj, minProp, maxProp, minDif) {\n    this.obj = obj;\n    this.minProp = minProp;\n    this.maxProp = maxProp;\n    this.minDif = minDif;\n  }\n  get min() {\n    return this.obj[this.minProp];\n  }\n  set min(v) {\n    this.obj[this.minProp] = v;\n    this.obj[this.maxProp] = Math.max(this.obj[this.maxProp], v + this.minDif);\n  }\n  get max() {\n    return this.obj[this.maxProp];\n  }\n  set max(v) {\n    this.obj[this.maxProp] = v;\n    this.min = this.min; // this will call the min setter\n  }\n}\n\nfunction updateCamera() {\n  camera.updateProjectionMatrix();\n}\nconst gui = new GUI();\ngui.add(camera, 'fov', 1, 180).onChange(updateCamera);\nconst minMaxGUIHelper = new MinMaxGUIHelper(camera, 'near', 'far', 0.1);\ngui.add(minMaxGUIHelper, 'min', 0.1, 50, 0.1).name('near').onChange(updateCamera);\ngui.add(minMaxGUIHelper, 'max', 0.1, 50, 0.1).name('far').onChange(updateCamera);\nconst DEFAULT_ROTATION_RATE = 0.01;\nconst createDemoUniverse = _ref => {\n  let {\n    fieldOfView,\n    width,\n    height,\n    nearPlane,\n    farPlane\n  } = _ref;\n  const scene = new Scene();\n  const camera = new PerspectiveCamera(fieldOfView, width / height, nearPlane, farPlane);\n  const renderer = new WebGLRenderer();\n  renderer.setSize(width, height);\n  scene.add(new AmbientLight('white', 0.5));\n  const directionalLight = new DirectionalLight('white', 1);\n  directionalLight.position.set(-1.5, 1, 2);\n  directionalLight.target.position.set(0, 0, 0);\n  scene.add(directionalLight);\n  scene.add(directionalLight.target);\n  const directionalLightFromBehind = new DirectionalLight('white', 1);\n  directionalLight.position.set(-1.5, 1, -2);\n  directionalLight.target.position.set(0, 0, 0);\n  scene.add(directionalLight);\n  scene.add(directionalLight.target);\n  const garnet = new Garnet('gray');\n  scene.add(garnet.mesh);\n  const peridot = new Peridot();\n  scene.add(peridot.group);\n\n  // Turning is a universe-specific behavior: you can decide what these can be.\n  let turning = false;\n  const turn = () => {\n    turning = true;\n  };\n  const stop = () => {\n    turning = false;\n  };\n  const animate = () => {\n    window.requestAnimationFrame(animate);\n    if (turning) {\n      garnet.mesh.rotation.x += DEFAULT_ROTATION_RATE;\n      garnet.mesh.rotation.y += DEFAULT_ROTATION_RATE;\n      peridot.group.rotation.x -= DEFAULT_ROTATION_RATE / 2;\n      peridot.group.rotation.y -= DEFAULT_ROTATION_RATE / 4;\n    }\n    renderer.render(scene, camera);\n  };\n  return {\n    camera,\n    renderer,\n    animate,\n    turn,\n    stop,\n    cast: {\n      garnet,\n      peridot\n    }\n  };\n};\nexport { createDemoUniverse };","map":{"version":3,"names":["Scene","PerspectiveCamera","WebGLRenderer","AmbientLight","DirectionalLight","GUI","Garnet","Peridot","MinMaxGUIHelper","constructor","obj","minProp","maxProp","minDif","min","v","Math","max","updateCamera","camera","updateProjectionMatrix","gui","add","onChange","minMaxGUIHelper","name","DEFAULT_ROTATION_RATE","createDemoUniverse","fieldOfView","width","height","nearPlane","farPlane","scene","renderer","setSize","directionalLight","position","set","target","directionalLightFromBehind","garnet","mesh","peridot","group","turning","turn","stop","animate","window","requestAnimationFrame","rotation","x","y","render","cast"],"sources":["/Users/robert_castro/their-3d-library-robertc-team/src/universes/demo-universe.js"],"sourcesContent":["/**\n * The scene-manager module serves as an entry point to all scene-related activities, from initialization\n * to access to objects to anything else.\n *\n * The starter version of the scene manager is adapted from the introductory code provided by three.js.\n */\nimport { Scene, PerspectiveCamera, WebGLRenderer, AmbientLight, DirectionalLight } from 'three'\nimport * as GUI from 'dat.gui';\nimport Garnet from '../cast/garnet'\nimport Peridot from '../cast/peridot'\n\nclass MinMaxGUIHelper {\n  constructor(obj, minProp, maxProp, minDif) {\n    this.obj = obj;\n    this.minProp = minProp;\n    this.maxProp = maxProp;\n    this.minDif = minDif;\n  }\n  get min() {\n    return this.obj[this.minProp];\n  }\n  set min(v) {\n    this.obj[this.minProp] = v;\n    this.obj[this.maxProp] = Math.max(this.obj[this.maxProp], v + this.minDif);\n  }\n  get max() {\n    return this.obj[this.maxProp];\n  }\n  set max(v) {\n    this.obj[this.maxProp] = v;\n    this.min = this.min;  // this will call the min setter\n  }\n}\nfunction updateCamera() {\n  camera.updateProjectionMatrix();\n}\n \nconst gui = new GUI();\ngui.add(camera, 'fov', 1, 180).onChange(updateCamera);\nconst minMaxGUIHelper = new MinMaxGUIHelper(camera, 'near', 'far', 0.1);\ngui.add(minMaxGUIHelper, 'min', 0.1, 50, 0.1).name('near').onChange(updateCamera);\ngui.add(minMaxGUIHelper, 'max', 0.1, 50, 0.1).name('far').onChange(updateCamera);\n\nconst DEFAULT_ROTATION_RATE = 0.01\n\nconst createDemoUniverse = ({ fieldOfView, width, height, nearPlane, farPlane}) => {\n  const scene = new Scene()\n  const camera = new PerspectiveCamera(fieldOfView, width / height, nearPlane, farPlane)\n\n  const renderer = new WebGLRenderer()\n  renderer.setSize(width, height)\n\n  scene.add(new AmbientLight('white', 0.5))\n\n  const directionalLight = new DirectionalLight('white', 1)\n  directionalLight.position.set(-1.5, 1, 2)\n  directionalLight.target.position.set(0, 0, 0)\n  scene.add(directionalLight)\n  scene.add(directionalLight.target)\n\n  const directionalLightFromBehind = new DirectionalLight('white', 1)\n  directionalLight.position.set(-1.5, 1, -2)\n  directionalLight.target.position.set(0, 0, 0)\n  scene.add(directionalLight)\n  scene.add(directionalLight.target)\n\n  const garnet = new Garnet('gray')\n  scene.add(garnet.mesh)\n\n  const peridot = new Peridot()\n  scene.add(peridot.group)\n\n  // Turning is a universe-specific behavior: you can decide what these can be.\n  let turning = false\n  const turn = () => {\n    turning = true\n  }\n\n  const stop = () => {\n    turning = false\n  }\n\n  const animate = () => {\n    window.requestAnimationFrame(animate)\n\n    if (turning) {\n      garnet.mesh.rotation.x += DEFAULT_ROTATION_RATE\n      garnet.mesh.rotation.y += DEFAULT_ROTATION_RATE\n\n      peridot.group.rotation.x -= DEFAULT_ROTATION_RATE / 2\n      peridot.group.rotation.y -= DEFAULT_ROTATION_RATE / 4\n    }\n\n    renderer.render(scene, camera)\n  }\n\n  return {\n    camera,\n    renderer,\n    animate,\n    turn,\n    stop,\n    cast: {\n      garnet,\n      peridot\n    }\n  }\n}\n\nexport { createDemoUniverse }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}