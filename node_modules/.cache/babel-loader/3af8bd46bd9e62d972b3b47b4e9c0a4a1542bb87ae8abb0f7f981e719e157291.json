{"ast":null,"code":"/**\n * We take the approach of organizing each “cast member” in a scene within its own file.\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\n * to these specific “characters.”\n */\nimport { Scene, SphereGeometry, MeshPhongMaterial, Mesh, MeshBasicMaterial, TextureLoader, RingGeometry } from 'three';\nimport { Tween, Ease } from '@createjs/tweenjs';\nimport { bounceIn } from '../utilities/easeFix';\n\n// Original image is copied from Smule website:\n// https://www.smule.com/song/garnet-peridot-lets-fuse-steven-universe-scene-karaoke-lyrics/244819067_1445650/arrangement\nimport garnetSmule from '../textures/garnet-smule.jpg';\nimport apocalypseWorld from '../textures/apocalypse world.jpg';\n\n/**\n * The use of a JavaScript “class” is also a design choice.\n */\nclass Garnet {\n  constructor(color) {\n    // Initialize Three.js scene\n    const textureLoader = new TextureLoader();\n    //const sphereRadius = 2;\n    //const sphereWidthSegments = 4;\n    //const sphereHeightSegments = 3;\n    this.geometry = new SphereGeometry();\n    this.material = new MeshPhongMaterial({\n      color: '#4849c5',\n      map: textureLoader.load(apocalypseWorld)\n    });\n    this.mesh = new Mesh(this.geometry, this.material);\n    this.scene = new Scene();\n    this.ringGeometry = new RingGeometry(10, 15, 32);\n    this.ringMaterial = new MeshPhongMaterial({\n      color: '#ff9900'\n    });\n    this.ring = new Mesh(this.ringGeometry, this.ringMaterial);\n    this.ring.rotation.x = Math.PI / 2; // Rotate the ring to be horizontal\n    this.scene.add(this.ring);\n  }\n\n  // Additional methods or animations can be added here\n\n  // Makes Garnet do a “canned” stretch-like animation.\n  flex() {\n    // Tween is a convenient helper for doing completely independent autonomous animations.\n    // See https://www.createjs.com/demos/tweenjs/tween_sparktable to get a visual on various\n    // easing functions.\n    //\n    // Caution: Some easing functions aren’t built correctly and will produce errors. You can\n    // copy the source code to use them.\n    Tween.get(this.mesh.scale).to({\n      x: 3\n    }, 750, Ease.sineInOut).to({\n      x: 1\n    }, 1250, Ease.backOut).to({\n      y: 4\n    }, 3000, Ease.elasticInOut).to({\n      y: 1\n    }, 500); // No Ease means linear motion (our animator friends would call that boring).\n  }\n\n  // Makes Garnet realign with the axes, using Tween to make it smooth.\n  reset() {\n    Tween.get(this.mesh.rotation).to({\n      x: 0,\n      y: 0,\n      z: 0\n    }, 4000, bounceIn);\n  }\n}\nexport default Garnet;","map":{"version":3,"names":["Scene","SphereGeometry","MeshPhongMaterial","Mesh","MeshBasicMaterial","TextureLoader","RingGeometry","Tween","Ease","bounceIn","garnetSmule","apocalypseWorld","Garnet","constructor","color","textureLoader","geometry","material","map","load","mesh","scene","ringGeometry","ringMaterial","ring","rotation","x","Math","PI","add","flex","get","scale","to","sineInOut","backOut","y","elasticInOut","reset","z"],"sources":["/Users/robert_castro/their-3d-library-robertc-team/src/cast/garnet.js"],"sourcesContent":["/**\n * We take the approach of organizing each “cast member” in a scene within its own file.\n * This is a choice and isn’t required, but it does isolate internal changes/enhancements\n * to these specific “characters.”\n */\nimport { Scene, SphereGeometry, MeshPhongMaterial, Mesh, MeshBasicMaterial, TextureLoader, RingGeometry} from 'three'\nimport { Tween, Ease } from '@createjs/tweenjs'\nimport { bounceIn } from '../utilities/easeFix'\n\n// Original image is copied from Smule website:\n// https://www.smule.com/song/garnet-peridot-lets-fuse-steven-universe-scene-karaoke-lyrics/244819067_1445650/arrangement\nimport garnetSmule from '../textures/garnet-smule.jpg'\nimport apocalypseWorld from '../textures/apocalypse world.jpg'\n\n\n/**\n * The use of a JavaScript “class” is also a design choice.\n */\nclass Garnet {\n  constructor(color) {\n    // Initialize Three.js scene\n    const textureLoader = new TextureLoader()\n    //const sphereRadius = 2;\n    //const sphereWidthSegments = 4;\n    //const sphereHeightSegments = 3;\n    this.geometry = new SphereGeometry()\n    this.material = new MeshPhongMaterial({color: '#4849c5', map: textureLoader.load(apocalypseWorld)})\n    this.mesh = new Mesh(this.geometry, this.material)\n    this.scene = new Scene();\n\n    this.ringGeometry = new RingGeometry(10, 15, 32);\n    this.ringMaterial = new MeshPhongMaterial({ color: '#ff9900' });\n    this.ring = new Mesh(this.ringGeometry, this.ringMaterial);\n    this.ring.rotation.x = Math.PI / 2; // Rotate the ring to be horizontal\n    this.scene.add(this.ring)\n\n  }\n\n  // Additional methods or animations can be added here\n\n  // Makes Garnet do a “canned” stretch-like animation.\n  flex() {\n    // Tween is a convenient helper for doing completely independent autonomous animations.\n    // See https://www.createjs.com/demos/tweenjs/tween_sparktable to get a visual on various\n    // easing functions.\n    //\n    // Caution: Some easing functions aren’t built correctly and will produce errors. You can\n    // copy the source code to use them.\n    Tween.get(this.mesh.scale)\n      .to({ x: 3 }, 750, Ease.sineInOut)\n      .to({ x: 1 }, 1250, Ease.backOut)\n      .to({ y: 4 }, 3000, Ease.elasticInOut)\n      .to({ y: 1 }, 500) // No Ease means linear motion (our animator friends would call that boring).\n  }\n\n\n  // Makes Garnet realign with the axes, using Tween to make it smooth.\n  reset() \n  {\n    Tween.get(this.mesh.rotation).to({ x: 0, y: 0, z: 0 }, 4000, bounceIn)\n  }\n}\n\nexport default Garnet\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAK,EAAEC,cAAc,EAAEC,iBAAiB,EAAEC,IAAI,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,YAAY,QAAO,OAAO;AACrH,SAASC,KAAK,EAAEC,IAAI,QAAQ,mBAAmB;AAC/C,SAASC,QAAQ,QAAQ,sBAAsB;;AAE/C;AACA;AACA,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,eAAe,MAAM,kCAAkC;;AAG9D;AACA;AACA;AACA,MAAMC,MAAM,CAAC;EACXC,WAAW,CAACC,KAAK,EAAE;IACjB;IACA,MAAMC,aAAa,GAAG,IAAIV,aAAa,EAAE;IACzC;IACA;IACA;IACA,IAAI,CAACW,QAAQ,GAAG,IAAIf,cAAc,EAAE;IACpC,IAAI,CAACgB,QAAQ,GAAG,IAAIf,iBAAiB,CAAC;MAACY,KAAK,EAAE,SAAS;MAAEI,GAAG,EAAEH,aAAa,CAACI,IAAI,CAACR,eAAe;IAAC,CAAC,CAAC;IACnG,IAAI,CAACS,IAAI,GAAG,IAAIjB,IAAI,CAAC,IAAI,CAACa,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC;IAClD,IAAI,CAACI,KAAK,GAAG,IAAIrB,KAAK,EAAE;IAExB,IAAI,CAACsB,YAAY,GAAG,IAAIhB,YAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IAChD,IAAI,CAACiB,YAAY,GAAG,IAAIrB,iBAAiB,CAAC;MAAEY,KAAK,EAAE;IAAU,CAAC,CAAC;IAC/D,IAAI,CAACU,IAAI,GAAG,IAAIrB,IAAI,CAAC,IAAI,CAACmB,YAAY,EAAE,IAAI,CAACC,YAAY,CAAC;IAC1D,IAAI,CAACC,IAAI,CAACC,QAAQ,CAACC,CAAC,GAAGC,IAAI,CAACC,EAAE,GAAG,CAAC,CAAC,CAAC;IACpC,IAAI,CAACP,KAAK,CAACQ,GAAG,CAAC,IAAI,CAACL,IAAI,CAAC;EAE3B;;EAEA;;EAEA;EACAM,IAAI,GAAG;IACL;IACA;IACA;IACA;IACA;IACA;IACAvB,KAAK,CAACwB,GAAG,CAAC,IAAI,CAACX,IAAI,CAACY,KAAK,CAAC,CACvBC,EAAE,CAAC;MAAEP,CAAC,EAAE;IAAE,CAAC,EAAE,GAAG,EAAElB,IAAI,CAAC0B,SAAS,CAAC,CACjCD,EAAE,CAAC;MAAEP,CAAC,EAAE;IAAE,CAAC,EAAE,IAAI,EAAElB,IAAI,CAAC2B,OAAO,CAAC,CAChCF,EAAE,CAAC;MAAEG,CAAC,EAAE;IAAE,CAAC,EAAE,IAAI,EAAE5B,IAAI,CAAC6B,YAAY,CAAC,CACrCJ,EAAE,CAAC;MAAEG,CAAC,EAAE;IAAE,CAAC,EAAE,GAAG,CAAC,EAAC;EACvB;;EAGA;EACAE,KAAK,GACL;IACE/B,KAAK,CAACwB,GAAG,CAAC,IAAI,CAACX,IAAI,CAACK,QAAQ,CAAC,CAACQ,EAAE,CAAC;MAAEP,CAAC,EAAE,CAAC;MAAEU,CAAC,EAAE,CAAC;MAAEG,CAAC,EAAE;IAAE,CAAC,EAAE,IAAI,EAAE9B,QAAQ,CAAC;EACxE;AACF;AAEA,eAAeG,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}