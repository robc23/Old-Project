{"ast":null,"code":"import { Group } from 'three';\nimport Garnet from '../cast/garnet';\nimport Sun from '../cast/sun';\nclass SolarSystem {\n  constructor() {\n    this.group = new Group();\n    const garnet = new Garnet();\n    const sun = new Sun();\n\n    // Set positions for Garnet and Sun\n    garnet.group.position.x = -5;\n    sun.group.position.x = 0;\n\n    // Add Garnet and Sun to the Solar System group\n    this.group.add(garnet.group);\n    this.group.add(sun.group);\n    this.garnet = garnet;\n  }\n  flex() {\n    // Tween is a convenient helper for doing completely independent autonomous animations.\n    // See https://www.createjs.com/demos/tweenjs/tween_sparktable to get a visual on various\n    // easing functions.\n    //\n    // Caution: Some easing functions aren’t built correctly and will produce errors. You can\n    // copy the source code to use them.\n    Tween.get(this.mesh.scale).to({\n      x: 3\n    }, 750, Ease.sineInOut).to({\n      x: 1\n    }, 1250, Ease.backOut).to({\n      y: 4\n    }, 3000, Ease.elasticInOut).to({\n      y: 1\n    }, 500); // No Ease means linear motion (our animator friends would call that boring).\n\n    // Rotation animation\n    Tween.get(this.mesh.rotation).to({\n      x: Math.PI * 2\n    }, 1000, Ease.linear).to({\n      y: Math.PI * 2\n    }, 1000, Ease.linear);\n\n    // Color animation\n    Tween.get(this.mesh.material.color).to({\n      r: 1,\n      g: 0,\n      b: 0\n    }, 1000, Ease.linear).to({\n      r: 1,\n      g: 1,\n      b: 1\n    }, 1000, Ease.linear);\n  }\n\n  // Makes Garnet realign with the axes, using Tween to make it smooth.\n  reset() {\n    Tween.get(this.mesh.rotation).to({\n      x: 0,\n      y: 0,\n      z: 0\n    }, 4000, bounceIn);\n  }\n}\nexport default SolarSystem;","map":{"version":3,"names":["Group","Garnet","Sun","SolarSystem","constructor","group","garnet","sun","position","x","add","flex","Tween","get","mesh","scale","to","Ease","sineInOut","backOut","y","elasticInOut","rotation","Math","PI","linear","material","color","r","g","b","reset","z","bounceIn"],"sources":["/Users/robert_castro/their-3d-library-robertc-team/src/cast/solarSystem.js"],"sourcesContent":["import { Group } from 'three'\nimport Garnet from '../cast/garnet'\nimport Sun from '../cast/sun'\n\nclass SolarSystem {\n    constructor() {\n      this.group = new Group();\n  \n      const garnet = new Garnet();\n      const sun = new Sun();\n  \n      // Set positions for Garnet and Sun\n      garnet.group.position.x = -5; \n      sun.group.position.x = 0; \n  \n      // Add Garnet and Sun to the Solar System group\n      this.group.add(garnet.group);\n      this.group.add(sun.group);\n      this.garnet = garnet\n    }\n    flex() {\n      // Tween is a convenient helper for doing completely independent autonomous animations.\n      // See https://www.createjs.com/demos/tweenjs/tween_sparktable to get a visual on various\n      // easing functions.\n      //\n      // Caution: Some easing functions aren’t built correctly and will produce errors. You can\n      // copy the source code to use them.\n      Tween.get(this.mesh.scale)\n        .to({ x: 3 }, 750, Ease.sineInOut)\n        .to({ x: 1 }, 1250, Ease.backOut)\n        .to({ y: 4 }, 3000, Ease.elasticInOut)\n        .to({ y: 1 }, 500) // No Ease means linear motion (our animator friends would call that boring).\n  \n      // Rotation animation\n      Tween.get(this.mesh.rotation)\n        .to({ x: Math.PI * 2 }, 1000, Ease.linear)\n        .to({ y: Math.PI * 2 }, 1000, Ease.linear);\n  \n      // Color animation\n      Tween.get(this.mesh.material.color)\n        .to({ r: 1, g: 0, b: 0 }, 1000, Ease.linear)\n        .to({ r: 1, g: 1, b: 1 }, 1000, Ease.linear);\n  \n    }\n  \n  \n    // Makes Garnet realign with the axes, using Tween to make it smooth.\n    reset() \n    {\n      Tween.get(this.mesh.rotation).to({ x: 0, y: 0, z: 0 }, 4000, bounceIn)\n    }\n  \n  }\n  \n  export default SolarSystem"],"mappings":"AAAA,SAASA,KAAK,QAAQ,OAAO;AAC7B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,GAAG,MAAM,aAAa;AAE7B,MAAMC,WAAW,CAAC;EACdC,WAAW,GAAG;IACZ,IAAI,CAACC,KAAK,GAAG,IAAIL,KAAK,EAAE;IAExB,MAAMM,MAAM,GAAG,IAAIL,MAAM,EAAE;IAC3B,MAAMM,GAAG,GAAG,IAAIL,GAAG,EAAE;;IAErB;IACAI,MAAM,CAACD,KAAK,CAACG,QAAQ,CAACC,CAAC,GAAG,CAAC,CAAC;IAC5BF,GAAG,CAACF,KAAK,CAACG,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAExB;IACA,IAAI,CAACJ,KAAK,CAACK,GAAG,CAACJ,MAAM,CAACD,KAAK,CAAC;IAC5B,IAAI,CAACA,KAAK,CAACK,GAAG,CAACH,GAAG,CAACF,KAAK,CAAC;IACzB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EACAK,IAAI,GAAG;IACL;IACA;IACA;IACA;IACA;IACA;IACAC,KAAK,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAACC,KAAK,CAAC,CACvBC,EAAE,CAAC;MAAEP,CAAC,EAAE;IAAE,CAAC,EAAE,GAAG,EAAEQ,IAAI,CAACC,SAAS,CAAC,CACjCF,EAAE,CAAC;MAAEP,CAAC,EAAE;IAAE,CAAC,EAAE,IAAI,EAAEQ,IAAI,CAACE,OAAO,CAAC,CAChCH,EAAE,CAAC;MAAEI,CAAC,EAAE;IAAE,CAAC,EAAE,IAAI,EAAEH,IAAI,CAACI,YAAY,CAAC,CACrCL,EAAE,CAAC;MAAEI,CAAC,EAAE;IAAE,CAAC,EAAE,GAAG,CAAC,EAAC;;IAErB;IACAR,KAAK,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAACQ,QAAQ,CAAC,CAC1BN,EAAE,CAAC;MAAEP,CAAC,EAAEc,IAAI,CAACC,EAAE,GAAG;IAAE,CAAC,EAAE,IAAI,EAAEP,IAAI,CAACQ,MAAM,CAAC,CACzCT,EAAE,CAAC;MAAEI,CAAC,EAAEG,IAAI,CAACC,EAAE,GAAG;IAAE,CAAC,EAAE,IAAI,EAAEP,IAAI,CAACQ,MAAM,CAAC;;IAE5C;IACAb,KAAK,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAACY,QAAQ,CAACC,KAAK,CAAC,CAChCX,EAAE,CAAC;MAAEY,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,EAAE,IAAI,EAAEb,IAAI,CAACQ,MAAM,CAAC,CAC3CT,EAAE,CAAC;MAAEY,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE,CAAC;MAAEC,CAAC,EAAE;IAAE,CAAC,EAAE,IAAI,EAAEb,IAAI,CAACQ,MAAM,CAAC;EAEhD;;EAGA;EACAM,KAAK,GACL;IACEnB,KAAK,CAACC,GAAG,CAAC,IAAI,CAACC,IAAI,CAACQ,QAAQ,CAAC,CAACN,EAAE,CAAC;MAAEP,CAAC,EAAE,CAAC;MAAEW,CAAC,EAAE,CAAC;MAAEY,CAAC,EAAE;IAAE,CAAC,EAAE,IAAI,EAAEC,QAAQ,CAAC;EACxE;AAEF;AAEA,eAAe9B,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}