{"ast":null,"code":"/**\n * The scene-manager module serves as an entry point to all scene-related activities, from initialization\n * to access to objects to anything else.\n *\n * The starter version of the scene manager is adapted from the introductory code provided by three.js.\n */\nimport { Scene, PerspectiveCamera, WebGLRenderer, AmbientLight, DirectionalLight } from 'three';\nimport * as GUI from 'dat.gui';\nimport Garnet from '../cast/garnet';\nimport Peridot from '../cast/peridot';\nclass MinMaxGUIHelper {\n  constructor(obj, minProp, maxProp, minDif) {\n    this.obj = obj;\n    this.minProp = minProp;\n    this.maxProp = maxProp;\n    this.minDif = minDif;\n  }\n  get min() {\n    return this.obj[this.minProp];\n  }\n  set min(v) {\n    this.obj[this.minProp] = v;\n    this.obj[this.maxProp] = Math.max(this.obj[this.maxProp], v + this.minDif);\n  }\n  get max() {\n    return this.obj[this.maxProp];\n  }\n  set max(v) {\n    if (this.obj[this.maxProp] !== v) {\n      this.obj[this.maxProp] = v;\n      // eslint-disable-next-line no-self-assign\n      this.min = this.min; // this will call the min setter\n    }\n  }\n}\n\nfunction updateCamera() {\n  this.camera.updateProjectionMatrix();\n}\nconst DEFAULT_ROTATION_RATE = 0.01;\nconst createDemoUniverse = _ref => {\n  let {\n    fieldOfView,\n    width,\n    height,\n    nearPlane,\n    farPlane\n  } = _ref;\n  const scene = new Scene();\n  const camera = new PerspectiveCamera(fieldOfView, width / height, nearPlane, farPlane);\n  const renderer = new WebGLRenderer();\n  renderer.setSize(width, height);\n  scene.add(new AmbientLight('white', 0.5));\n  const directionalLight = new DirectionalLight('white', 1);\n  directionalLight.position.set(-1.5, 1, 2);\n  directionalLight.target.position.set(0, 0, 0);\n  scene.add(directionalLight);\n  scene.add(directionalLight.target);\n  const directionalLightFromBehind = new DirectionalLight('white', 1);\n  directionalLightFromBehind.position.set(-1.5, 1, -2);\n  directionalLightFromBehind.target.position.set(0, 0, 0);\n  scene.add(directionalLightFromBehind);\n  scene.add(directionalLightFromBehind.target);\n  const garnet = new Garnet('gray');\n  scene.add(garnet.mesh);\n  const peridot = new Peridot();\n  scene.add(peridot.group);\n  const gui = new GUI();\n  gui.add(this.camera, 'fov', 1, 180).onChange(updateCamera);\n  const minMaxGUIHelper = new MinMaxGUIHelper(this.camera, 'near', 'far', 0.1);\n  gui.add(minMaxGUIHelper, 'min', 0.1, 50, 0.1).name('near').onChange(updateCamera);\n  gui.add(minMaxGUIHelper, 'max', 0.1, 50, 0.1).name('far').onChange(updateCamera);\n\n  // Turning is a universe-specific behavior: you can decide what these can be.\n  let turning = false;\n  const turn = () => {\n    turning = true;\n  };\n  const stop = () => {\n    turning = false;\n  };\n  const animate = () => {\n    window.requestAnimationFrame(animate);\n    if (turning) {\n      garnet.mesh.rotation.x += DEFAULT_ROTATION_RATE;\n      garnet.mesh.rotation.y += DEFAULT_ROTATION_RATE;\n      peridot.group.rotation.x -= DEFAULT_ROTATION_RATE / 2;\n      peridot.group.rotation.y -= DEFAULT_ROTATION_RATE / 4;\n    }\n    renderer.render(scene, camera);\n  };\n  return {\n    camera,\n    renderer,\n    animate,\n    turn,\n    stop,\n    cast: {\n      garnet,\n      peridot\n    }\n  };\n};\nexport { createDemoUniverse };","map":{"version":3,"names":["Scene","PerspectiveCamera","WebGLRenderer","AmbientLight","DirectionalLight","GUI","Garnet","Peridot","MinMaxGUIHelper","constructor","obj","minProp","maxProp","minDif","min","v","Math","max","updateCamera","camera","updateProjectionMatrix","DEFAULT_ROTATION_RATE","createDemoUniverse","fieldOfView","width","height","nearPlane","farPlane","scene","renderer","setSize","add","directionalLight","position","set","target","directionalLightFromBehind","garnet","mesh","peridot","group","gui","onChange","minMaxGUIHelper","name","turning","turn","stop","animate","window","requestAnimationFrame","rotation","x","y","render","cast"],"sources":["/Users/robert_castro/their-3d-library-robertc-team/src/universes/demo-universe.js"],"sourcesContent":["/**\n * The scene-manager module serves as an entry point to all scene-related activities, from initialization\n * to access to objects to anything else.\n *\n * The starter version of the scene manager is adapted from the introductory code provided by three.js.\n */\nimport { Scene, PerspectiveCamera, WebGLRenderer, AmbientLight, DirectionalLight } from 'three'\nimport * as GUI from 'dat.gui';\nimport Garnet from '../cast/garnet'\nimport Peridot from '../cast/peridot'\n\nclass MinMaxGUIHelper {\n  constructor(obj, minProp, maxProp, minDif) {\n    this.obj = obj;\n    this.minProp = minProp;\n    this.maxProp = maxProp;\n    this.minDif = minDif;\n  }\n  get min() {\n    return this.obj[this.minProp];\n  }\n  set min(v) {\n    this.obj[this.minProp] = v;\n    this.obj[this.maxProp] = Math.max(this.obj[this.maxProp], v + this.minDif);\n  }\n  get max() {\n    return this.obj[this.maxProp];\n  }\n  set max(v) {\n    if (this.obj[this.maxProp] !== v) {\n      this.obj[this.maxProp] = v;\n      // eslint-disable-next-line no-self-assign\n      this.min = this.min; // this will call the min setter\n    }\n  }\n}\nfunction updateCamera() {\n  this.camera.updateProjectionMatrix();\n}\n \nconst DEFAULT_ROTATION_RATE = 0.01\n\nconst createDemoUniverse = ({ fieldOfView, width, height, nearPlane, farPlane}) => {\n  const scene = new Scene()\n  const camera = new PerspectiveCamera(fieldOfView, width / height, nearPlane, farPlane)\n\n  const renderer = new WebGLRenderer()\n  renderer.setSize(width, height)\n\n  scene.add(new AmbientLight('white', 0.5))\n\n  const directionalLight = new DirectionalLight('white', 1)\n  directionalLight.position.set(-1.5, 1, 2)\n  directionalLight.target.position.set(0, 0, 0)\n  scene.add(directionalLight)\n  scene.add(directionalLight.target)\n\n  const directionalLightFromBehind = new DirectionalLight('white', 1)\n  directionalLightFromBehind.position.set(-1.5, 1, -2)\n  directionalLightFromBehind.target.position.set(0, 0, 0)\n  scene.add(directionalLightFromBehind)\n  scene.add(directionalLightFromBehind.target)\n\n  const garnet = new Garnet('gray')\n  scene.add(garnet.mesh)\n\n  const peridot = new Peridot()\n  scene.add(peridot.group)\n\n  const gui = new GUI();\n  gui.add(this.camera, 'fov', 1, 180).onChange(updateCamera);\n  const minMaxGUIHelper = new MinMaxGUIHelper(this.camera, 'near', 'far', 0.1);\n  gui.add(minMaxGUIHelper, 'min', 0.1, 50, 0.1).name('near').onChange(updateCamera);\n  gui.add(minMaxGUIHelper, 'max', 0.1, 50, 0.1).name('far').onChange(updateCamera);\n\n\n  // Turning is a universe-specific behavior: you can decide what these can be.\n  let turning = false\n  const turn = () => {\n    turning = true\n  }\n\n  const stop = () => {\n    turning = false\n  }\n\n  const animate = () => {\n    window.requestAnimationFrame(animate)\n\n    if (turning) {\n      garnet.mesh.rotation.x += DEFAULT_ROTATION_RATE\n      garnet.mesh.rotation.y += DEFAULT_ROTATION_RATE\n\n      peridot.group.rotation.x -= DEFAULT_ROTATION_RATE / 2\n      peridot.group.rotation.y -= DEFAULT_ROTATION_RATE / 4\n    }\n\n    renderer.render(scene, camera)\n  }\n\n  return {\n    camera,\n    renderer,\n    animate,\n    turn,\n    stop,\n    cast: {\n      garnet,\n      peridot\n    }\n  }\n}\n\nexport { createDemoUniverse }"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAK,EAAEC,iBAAiB,EAAEC,aAAa,EAAEC,YAAY,EAAEC,gBAAgB,QAAQ,OAAO;AAC/F,OAAO,KAAKC,GAAG,MAAM,SAAS;AAC9B,OAAOC,MAAM,MAAM,gBAAgB;AACnC,OAAOC,OAAO,MAAM,iBAAiB;AAErC,MAAMC,eAAe,CAAC;EACpBC,WAAW,CAACC,GAAG,EAAEC,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACzC,IAAI,CAACH,GAAG,GAAGA,GAAG;IACd,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;EACA,IAAIC,GAAG,GAAG;IACR,OAAO,IAAI,CAACJ,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC;EAC/B;EACA,IAAIG,GAAG,CAACC,CAAC,EAAE;IACT,IAAI,CAACL,GAAG,CAAC,IAAI,CAACC,OAAO,CAAC,GAAGI,CAAC;IAC1B,IAAI,CAACL,GAAG,CAAC,IAAI,CAACE,OAAO,CAAC,GAAGI,IAAI,CAACC,GAAG,CAAC,IAAI,CAACP,GAAG,CAAC,IAAI,CAACE,OAAO,CAAC,EAAEG,CAAC,GAAG,IAAI,CAACF,MAAM,CAAC;EAC5E;EACA,IAAII,GAAG,GAAG;IACR,OAAO,IAAI,CAACP,GAAG,CAAC,IAAI,CAACE,OAAO,CAAC;EAC/B;EACA,IAAIK,GAAG,CAACF,CAAC,EAAE;IACT,IAAI,IAAI,CAACL,GAAG,CAAC,IAAI,CAACE,OAAO,CAAC,KAAKG,CAAC,EAAE;MAChC,IAAI,CAACL,GAAG,CAAC,IAAI,CAACE,OAAO,CAAC,GAAGG,CAAC;MAC1B;MACA,IAAI,CAACD,GAAG,GAAG,IAAI,CAACA,GAAG,CAAC,CAAC;IACvB;EACF;AACF;;AACA,SAASI,YAAY,GAAG;EACtB,IAAI,CAACC,MAAM,CAACC,sBAAsB,EAAE;AACtC;AAEA,MAAMC,qBAAqB,GAAG,IAAI;AAElC,MAAMC,kBAAkB,GAAG,QAAwD;EAAA,IAAvD;IAAEC,WAAW;IAAEC,KAAK;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAQ,CAAC;EAC5E,MAAMC,KAAK,GAAG,IAAI5B,KAAK,EAAE;EACzB,MAAMmB,MAAM,GAAG,IAAIlB,iBAAiB,CAACsB,WAAW,EAAEC,KAAK,GAAGC,MAAM,EAAEC,SAAS,EAAEC,QAAQ,CAAC;EAEtF,MAAME,QAAQ,GAAG,IAAI3B,aAAa,EAAE;EACpC2B,QAAQ,CAACC,OAAO,CAACN,KAAK,EAAEC,MAAM,CAAC;EAE/BG,KAAK,CAACG,GAAG,CAAC,IAAI5B,YAAY,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC;EAEzC,MAAM6B,gBAAgB,GAAG,IAAI5B,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;EACzD4B,gBAAgB,CAACC,QAAQ,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC;EACzCF,gBAAgB,CAACG,MAAM,CAACF,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EAC7CN,KAAK,CAACG,GAAG,CAACC,gBAAgB,CAAC;EAC3BJ,KAAK,CAACG,GAAG,CAACC,gBAAgB,CAACG,MAAM,CAAC;EAElC,MAAMC,0BAA0B,GAAG,IAAIhC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC;EACnEgC,0BAA0B,CAACH,QAAQ,CAACC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;EACpDE,0BAA0B,CAACD,MAAM,CAACF,QAAQ,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;EACvDN,KAAK,CAACG,GAAG,CAACK,0BAA0B,CAAC;EACrCR,KAAK,CAACG,GAAG,CAACK,0BAA0B,CAACD,MAAM,CAAC;EAE5C,MAAME,MAAM,GAAG,IAAI/B,MAAM,CAAC,MAAM,CAAC;EACjCsB,KAAK,CAACG,GAAG,CAACM,MAAM,CAACC,IAAI,CAAC;EAEtB,MAAMC,OAAO,GAAG,IAAIhC,OAAO,EAAE;EAC7BqB,KAAK,CAACG,GAAG,CAACQ,OAAO,CAACC,KAAK,CAAC;EAExB,MAAMC,GAAG,GAAG,IAAIpC,GAAG,EAAE;EACrBoC,GAAG,CAACV,GAAG,CAAC,IAAI,CAACZ,MAAM,EAAE,KAAK,EAAE,CAAC,EAAE,GAAG,CAAC,CAACuB,QAAQ,CAACxB,YAAY,CAAC;EAC1D,MAAMyB,eAAe,GAAG,IAAInC,eAAe,CAAC,IAAI,CAACW,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,GAAG,CAAC;EAC5EsB,GAAG,CAACV,GAAG,CAACY,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAACC,IAAI,CAAC,MAAM,CAAC,CAACF,QAAQ,CAACxB,YAAY,CAAC;EACjFuB,GAAG,CAACV,GAAG,CAACY,eAAe,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAACF,QAAQ,CAACxB,YAAY,CAAC;;EAGhF;EACA,IAAI2B,OAAO,GAAG,KAAK;EACnB,MAAMC,IAAI,GAAG,MAAM;IACjBD,OAAO,GAAG,IAAI;EAChB,CAAC;EAED,MAAME,IAAI,GAAG,MAAM;IACjBF,OAAO,GAAG,KAAK;EACjB,CAAC;EAED,MAAMG,OAAO,GAAG,MAAM;IACpBC,MAAM,CAACC,qBAAqB,CAACF,OAAO,CAAC;IAErC,IAAIH,OAAO,EAAE;MACXR,MAAM,CAACC,IAAI,CAACa,QAAQ,CAACC,CAAC,IAAI/B,qBAAqB;MAC/CgB,MAAM,CAACC,IAAI,CAACa,QAAQ,CAACE,CAAC,IAAIhC,qBAAqB;MAE/CkB,OAAO,CAACC,KAAK,CAACW,QAAQ,CAACC,CAAC,IAAI/B,qBAAqB,GAAG,CAAC;MACrDkB,OAAO,CAACC,KAAK,CAACW,QAAQ,CAACE,CAAC,IAAIhC,qBAAqB,GAAG,CAAC;IACvD;IAEAQ,QAAQ,CAACyB,MAAM,CAAC1B,KAAK,EAAET,MAAM,CAAC;EAChC,CAAC;EAED,OAAO;IACLA,MAAM;IACNU,QAAQ;IACRmB,OAAO;IACPF,IAAI;IACJC,IAAI;IACJQ,IAAI,EAAE;MACJlB,MAAM;MACNE;IACF;EACF,CAAC;AACH,CAAC;AAED,SAASjB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}