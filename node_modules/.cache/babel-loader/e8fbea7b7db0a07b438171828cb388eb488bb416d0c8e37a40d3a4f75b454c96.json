{"ast":null,"code":"/**\n * @license Tween\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AbstractTween from \"./AbstractTween\";\nimport { linear } from \"./Ease\";\nimport Ticker from \"@createjs/core/src/utils/Ticker\";\n\n/**\n * Tweens properties for a single target. Methods can be chained to create complex animation sequences:\n *\n * @example\n * Tween.get(target)\n *   .wait(500)\n *   .to({ alpha: 0, visible: false }, 1000)\n *   .call(handleComplete);\n *\n * Multiple tweens can share a target, however if they affect the same properties there could be unexpected\n * behaviour. To stop all tweens on an object, use {@link tweenjs.Tween#removeTweens} or pass `override:true`\n * in the props argument.\n *\n * \tcreatejs.Tween.get(target, {override:true}).to({x:100});\n *\n * Subscribe to the {@link tweenjs.Tween#event:change} event to be notified when the tween position changes.\n *\n * \tcreatejs.Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n * \tfunction handleChange(event) {\n * \t\t// The tween changed.\n * \t}\n *\n * @see {@link tweenjs.Tween.get}\n *\n * @memberof tweenjs\n * @extends tweenjs.AbstractTween\n *\n * @param {Object} target The target object that will have its properties tweened.\n * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n * @param {Boolean} [props.useTicks]\n * @param {Boolean} [props.ignoreGlobalPause]\n * @param {Number|Boolean} [props.loop]\n * @param {Boolean} [props.reversed]\n * @param {Boolean} [props.bounce]\n * @param {Number} [props.timeScale]\n * @param {Object} [props.pluginData]\n * @param {Boolean} [props.paused]\n * @param {*} [props.position] indicates the initial position for this tween\n * @param {*} [props.onChange] adds the specified function as a listener to the `change` event\n * @param {*} [props.onComplete] adds the specified function as a listener to the `complete` event\n * @param {*} [props.override] if true, removes all existing tweens for the target\n */\nexport default class Tween extends AbstractTween {\n  constructor(target, props) {\n    super(props);\n\n    /**\n     * Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\n     * you specify data by assigning it to a property of `pluginData` with the same name as the plugin.\n     * Note that in many cases, this data is used as soon as the plugin initializes itself for the tween.\n     * As such, this data should be set before the first `to` call in most cases.\n     *\n     * Some plugins also store working data in this object, usually in a property named `_PluginClassName`.\n     * See the documentation for individual plugins for more details.\n     *\n     * @example\n     * myTween.pluginData.SmartRotation = data;\n     * myTween.pluginData.SmartRotation_disabled = true;\n     *\n     *\n     * @default null\n     * @type {Object}\n     */\n    this.pluginData = null;\n\n    /**\n     * The target of this tween. This is the object on which the tweened properties will be changed.\n     * @type {Object}\n     * @readonly\n     */\n    this.target = target;\n\n    /**\n     * Indicates the tween's current position is within a passive wait.\n     * @type {Boolean}\n     * @default false\n     * @readonly\n     */\n    this.passive = false;\n\n    /**\n     * @private\n     * @type {TweenStep}\n     */\n    this._stepHead = new TweenStep(null, 0, 0, {}, null, true);\n\n    /**\n     * @private\n     * @type {TweenStep}\n     */\n    this._stepTail = this._stepHead;\n\n    /**\n     * The position within the current step. Used by MovieClip.\n     * @private\n     * @type {Number}\n     * @default 0\n     */\n    this._stepPosition = 0;\n\n    /**\n     * @private\n     * @type {TweenAction}\n     * @default null\n     */\n    this._actionHead = null;\n\n    /**\n     * @private\n     * @type {TweenAction}\n     * @default null\n     */\n    this._actionTail = null;\n\n    /**\n     * Plugins added to this tween instance.\n     * @private\n     * @type {Object[]}\n     * @default null\n     */\n    this._plugins = null;\n\n    /**\n     * Hash for quickly looking up added plugins. Null until a plugin is added.\n     * @private\n     * @type {Object}\n     * @default null\n     */\n    this._pluginIds = null;\n\n    /**\n     * Used by plugins to inject new properties.\n     * @private\n     * @type {Object}\n     * @default null\n     */\n    this._injected = null;\n    if (props) {\n      this.pluginData = props.pluginData;\n      if (props.override) {\n        Tween.removeTweens(target);\n      }\n    }\n    if (!this.pluginData) {\n      this.pluginData = {};\n    }\n    this._init(props);\n  }\n\n  /**\n   * Returns a new tween instance. This is functionally identical to using `new Tween(...)`, but may look cleaner\n   * with the chained syntax of TweenJS.\n   *\n   * @static\n   * @example\n   * let tween = Tween.get(target).to({ x: 100 }, 500);\n   * // equivalent to:\n   * let tween = new Tween(target).to({ x: 100 }, 500);\n   *\n   * @param {Object} target The target object that will have its properties tweened.\n   * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n   * @param {Boolean} [props.useTicks]\n   * @param {Boolean} [props.ignoreGlobalPause]\n   * @param {Number|Boolean} [props.loop]\n   * @param {Boolean} [props.reversed]\n   * @param {Boolean} [props.bounce]\n   * @param {Number} [props.timeScale]\n   * @param {Object} [props.pluginData]\n   * @param {Boolean} [props.paused]\n   * @param {*} [props.position] indicates the initial position for this tween\n   * @param {*} [props.onChange] adds the specified function as a listener to the `change` event\n   * @param {*} [props.onComplete] adds the specified function as a listener to the `complete` event\n   * @param {*} [props.override] if true, removes all existing tweens for the target\n   * @return {Tween} A reference to the created tween.\n   */\n  static get(target, props) {\n    return new Tween(target, props);\n  }\n\n  /**\n   * Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\n   * manually if you prefer to use your own \"heartbeat\" implementation.\n   *\n   * @static\n   *\n   * @param {Number} delta The change in time in milliseconds since the last tick. Required unless all tweens have\n   * `useTicks` set to true.\n   * @param {Boolean} paused Indicates whether a global pause is in effect. Tweens with {@link tweenjs.Tween#ignoreGlobalPause}\n   * will ignore this, but all others will pause if this is `true`.\n   */\n  static tick(delta, paused) {\n    let tween = Tween._tweenHead;\n    while (tween) {\n      let next = tween._next; // in case it completes and wipes its _next property\n      if (paused && !tween.ignoreGlobalPause || tween._paused) {/* paused */} else {\n        tween.advance(tween.useTicks ? 1 : delta);\n      }\n      tween = next;\n    }\n  }\n\n  /**\n   * Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n   * {@link tweenjs.Ticker#event:tick} events from the {@link tweenjs.Ticker}.\n   * No other events are handled in Tween.\n   *\n   * @static\n   * @since 0.4.2\n   *\n   * @param {Object} event An event object passed in by the {@link core.EventDispatcher}. Will\n   * usually be of type \"tick\".\n   */\n  static handleEvent(event) {\n    if (event.type === \"tick\") {\n      this.tick(event.delta, event.paused);\n    }\n  }\n\n  /**\n   * Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\n   * property is `true`.\n   *\n   * @static\n   *\n   * @param {Object} target The target object to remove existing tweens from.=\n   */\n  static removeTweens(target) {\n    if (!target.tweenjs_count) {\n      return;\n    }\n    let tween = Tween._tweenHead;\n    while (tween) {\n      let next = tween._next;\n      if (tween.target === target) {\n        tween.paused = true;\n      }\n      tween = next;\n    }\n    target.tweenjs_count = 0;\n  }\n\n  /**\n   * Stop and remove all existing tweens.\n   *\n   * @static\n   * @since 0.4.1\n   */\n  static removeAllTweens() {\n    let tween = Tween._tweenHead;\n    while (tween) {\n      let next = tween._next;\n      tween._paused = true;\n      tween.target && (tween.target.tweenjs_count = 0);\n      tween._next = tween._prev = null;\n      tween = next;\n    }\n    Tween._tweenHead = Tween._tweenTail = null;\n  }\n\n  /**\n   * Indicates whether there are any active tweens on the target object (if specified) or in general.\n   *\n   * @static\n   *\n   * @param {Object} [target] The target to check for active tweens. If not specified, the return value will indicate\n   * if there are any active tweens on any target.\n   * @return {Boolean} Indicates if there are active tweens.\n   */\n  static hasActiveTweens(target) {\n    if (target) {\n      return !!target.tweenjs_count;\n    }\n    return !!Tween._tweenHead;\n  }\n\n  /**\n   * Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}\n   * for an example of how to write TweenJS plugins. Plugins should generally be installed via their own `install` method, in order to provide\n   * the plugin with an opportunity to configure itself.\n   *\n   * @static\n   *\n   * @param {Object} plugin The plugin to install\n   * @param {Object} props The props to pass to the plugin\n   */\n  static installPlugin(plugin, props) {\n    plugin.install(props);\n    const priority = plugin.priority = plugin.priority || 0,\n      arr = Tween._plugins = Tween._plugins || [];\n    for (let i = 0, l = arr.length; i < l; i++) {\n      if (priority < arr[i].priority) {\n        break;\n      }\n    }\n    arr.splice(i, 0, plugin);\n  }\n\n  /**\n   * Registers or unregisters a tween with the ticking system.\n   *\n   * @private\n   * @static\n   *\n   * @param {Tween} tween The tween instance to register or unregister.\n   * @param {Boolean} paused If `false`, the tween is registered. If `true` the tween is unregistered.\n   */\n  static _register(tween, paused) {\n    const target = tween.target;\n    if (!paused && tween._paused) {\n      // TODO: this approach might fail if a dev is using sealed objects\n      if (target) {\n        target.tweenjs_count = target.tweenjs_count ? target.tweenjs_count + 1 : 1;\n      }\n      let tail = Tween._tweenTail;\n      if (!tail) {\n        Tween._tweenHead = Tween._tweenTail = tween;\n      } else {\n        Tween._tweenTail = tail._next = tween;\n        tween._prev = tail;\n      }\n      if (!Tween._inited) {\n        Ticker.addEventListener(\"tick\", Tween);\n        Tween._inited = true;\n      }\n    } else if (paused && !tween._paused) {\n      if (target) {\n        target.tweenjs_count--;\n      }\n      let next = tween._next,\n        prev = tween._prev;\n      if (next) {\n        next._prev = prev;\n      } else {\n        Tween._tweenTail = prev;\n      } // was tail\n      if (prev) {\n        prev._next = next;\n      } else {\n        Tween._tweenHead = next;\n      } // was head.\n\n      tween._next = tween._prev = null;\n    }\n  }\n\n  /**\n   * Adds a wait (essentially an empty tween).\n   *\n   * @example\n   * // This tween will wait 1s before alpha is faded to 0.\n   * Tween.get(target)\n   *   .wait(1000)\n   *   .to({ alpha: 0 }, 1000);\n   *\n   * @param {Number} duration The duration of the wait in milliseconds (or in ticks if `useTicks` is true).\n   * @param {Boolean} [passive=false] Tween properties will not be updated during a passive wait. This\n   * is mostly useful for use with {@link tweenjs.Timeline} instances that contain multiple tweens\n   * affecting the same target at different times.\n   * @chainable\n   */\n  wait(duration) {\n    let passive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (duration > 0) {\n      this._addStep(+duration, this._stepTail.props, null, passive);\n    }\n    return this;\n  }\n\n  /**\n   * Adds a tween from the current values to the specified properties. Set duration to 0 to jump to these value.\n   * Numeric properties will be tweened from their current value in the tween to the target value. Non-numeric\n   * properties will be set at the end of the specified duration.\n   *\n   * @example\n   * Tween.get(target)\n   *   .to({ alpha: 0, visible: false }, 1000);\n   *\n   * @param {Object} props An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\n   * property of the target to 300).\n   * @param {Number} [duration=0] The duration of the tween in milliseconds (or in ticks if `useTicks` is true).\n   * @param {Function} [ease=Ease.linear] The easing function to use for this tween. See the {@link tweenjs.Ease}\n   * class for a list of built-in ease functions.\n   * @chainable\n   */\n  to(props) {\n    let duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let ease = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : linear;\n    if (duration < 0) {\n      duration = 0;\n    }\n    const step = this._addStep(+duration, null, ease);\n    this._appendProps(props, step);\n    return this;\n  }\n\n  /**\n   * Adds a label that can be used with {@link tweenjs.Tween#gotoAndPlay}/{@link tweenjs.Tween#gotoAndStop}\n   * at the current point in the tween.\n   *\n   * @example\n   * let tween = Tween.get(foo)\n   *   .to({ x: 100 }, 1000)\n   *   .label(\"myLabel\")\n   *   .to({ x: 200 }, 1000);\n   * // ...\n   * tween.gotoAndPlay(\"myLabel\"); // would play from 1000ms in.\n   *\n   * @param {String} label The label name.\n   * @chainable\n   */\n  label(name) {\n    this.addLabel(name, this.duration);\n    return this;\n  }\n\n  /**\n   * Adds an action to call the specified function.\n   *\n   * @example\n   * // would call myFunction() after 1 second.\n   * Tween.get()\n   *   .wait(1000)\n   *   .call(myFunction);\n   *\n   * @param {Function} callback The function to call.\n   * @param {Array} [params]. The parameters to call the function with. If this is omitted, then the function\n   * will be called with a single param pointing to this tween.\n   * @param {Object} [scope]. The scope to call the function in. If omitted, it will be called in the target's scope.\n   * @chainable\n   */\n  call(callback, params, scope) {\n    return this._addAction(scope || this.target, callback, params || [this]);\n  }\n\n  /**\n   * Adds an action to set the specified props on the specified target. If `target` is null, it will use this tween's\n   * target. Note that for properties on the target object, you should consider using a zero duration {@link tweenjs.Tween#to}\n   * operation instead so the values are registered as tweened props.\n   *\n   * @example\n   * tween.wait(1000)\n   *   .set({ visible: false }, foo);\n   *\n   * @param {Object} props The properties to set (ex. `{ visible: false }`).\n   * @param {Object} [target] The target to set the properties on. If omitted, they will be set on the tween's target.\n   * @chainable\n   */\n  set(props, target) {\n    return this._addAction(target || this.target, this._set, [props]);\n  }\n\n  /**\n   * Adds an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n   *\n   * @example\n   * tween.to({ x: 100 }, 500)\n   *   .play(otherTween);\n   *\n   * @param {Tween} [tween] The tween to play. Defaults to this tween.\n   * @chainable\n   */\n  play(tween) {\n    return this._addAction(tween || this, this._set, [{\n      paused: false\n    }]);\n  }\n\n  /**\n   * Adds an action to pause the specified tween.\n   * At 60fps the tween will advance by ~16ms per tick, if the tween above was at 999ms prior to the current tick, it\n    * will advance to 1015ms (15ms into the second \"step\") and then pause.\n   *\n   * @example\n   * tween.pause(otherTween)\n   *   .to({ alpha: 1 }, 1000)\n   *   .play(otherTween);\n   *\n   * // Note that this executes at the end of a tween update,\n   * // so the tween may advance beyond the time the pause action was inserted at.\n    *\n    * tween.to({ foo: 0 }, 1000)\n    *   .pause()\n    *   .to({ foo: 1 }, 1000);\n   *\n   * @param {Tween} [tween] The tween to pause. Defaults to this tween.\n   * @chainable\n   */\n  pause(tween) {\n    return this._addAction(tween || this, this._set, [{\n      paused: false\n    }]);\n  }\n\n  /**\n   * @throws Tween cannot be cloned.\n   */\n  clone() {\n    throw \"Tween can not be cloned.\";\n  }\n\n  /**\n   * @private\n   * @param {Object} plugin\n   */\n  _addPlugin(plugin) {\n    let ids = this._pluginIds || (this._pluginIds = {}),\n      id = plugin.id;\n    if (!id || ids[id]) {\n      return;\n    } // already added\n\n    ids[id] = true;\n    let plugins = this._plugins || (this._plugins = []),\n      priority = plugin.priority || 0;\n    for (let i = 0, l = plugins.length; i < l; i++) {\n      if (priority < plugins[i].priority) {\n        plugins.splice(i, 0, plugin);\n        return;\n      }\n    }\n    plugins.push(plugin);\n  }\n\n  /**\n   * @private\n   * @param {} jump\n   * @param {Boolean} end\n    */\n  _updatePosition(jump, end) {\n    let step = this._stepHead.next,\n      t = this.position,\n      d = this.duration;\n    if (this.target && step) {\n      // find our new step index:\n      let stepNext = step.next;\n      while (stepNext && stepNext.t <= t) {\n        step = step.next;\n        stepNext = step.next;\n      }\n      let ratio = end ? d === 0 ? 1 : t / d : (t - step.t) / step.d; // TODO: revisit this.\n      this._updateTargetProps(step, ratio, end);\n    }\n    this._stepPosition = step ? t - step.t : 0;\n  }\n\n  /**\n   * @private\n   * @param {Object} step\n   * @param {Number} ratio\n   * @param {Boolean} end Indicates to plugins that the full tween has ended.\n   */\n  _updateTargetProps(step, ratio, end) {\n    if (this.passive = !!step.passive) {\n      return;\n    } // don't update props.\n\n    let v, v0, v1, ease;\n    let p0 = step.prev.props;\n    let p1 = step.props;\n    if (ease = step.ease) {\n      ratio = ease(ratio, 0, 1, 1);\n    }\n    let plugins = this._plugins;\n    proploop: for (let n in p0) {\n      v0 = p0[n];\n      v1 = p1[n];\n\n      // values are different & it is numeric then interpolate:\n      if (v0 !== v1 && typeof v0 === \"number\") {\n        v = v0 + (v1 - v0) * ratio;\n      } else {\n        v = ratio >= 1 ? v1 : v0;\n      }\n      if (plugins) {\n        for (let i = 0, l = plugins.length; i < l; i++) {\n          let value = plugins[i].change(this, step, n, v, ratio, end);\n          if (value === Tween.IGNORE) {\n            continue proploop;\n          }\n          if (value !== undefined) {\n            v = value;\n          }\n        }\n      }\n      this.target[n] = v;\n    }\n  }\n\n  /**\n   * @private\n   * @param {Number} startPos\n   * @param {Number} endPos\n   * @param {Boolean} includeStart\n   */\n  _runActionsRange(startPos, endPos, jump, includeStart) {\n    let rev = startPos > endPos;\n    let action = rev ? this._actionTail : this._actionHead;\n    let ePos = endPos,\n      sPos = startPos;\n    if (rev) {\n      ePos = startPos;\n      sPos = endPos;\n    }\n    let t = this.position;\n    while (action) {\n      let pos = action.t;\n      if (pos === endPos || pos > sPos && pos < ePos || includeStart && pos === startPos) {\n        action.funct.apply(action.scope, action.params);\n        if (t !== this.position) {\n          return true;\n        }\n      }\n      action = rev ? action.prev : action.next;\n    }\n  }\n\n  /**\n   * @private\n   * @param {Object} props\n   */\n  _appendProps(props, step, stepPlugins) {\n    let initProps = this._stepHead.props,\n      target = this.target,\n      plugins = Tween._plugins;\n    let n, i, l, value, initValue, inject;\n    let oldStep = step.prev,\n      oldProps = oldStep.props;\n    let stepProps = step.props || (step.props = this._cloneProps(oldProps));\n    let cleanProps = {};\n    for (n in props) {\n      if (!props.hasOwnProperty(n)) {\n        continue;\n      }\n      cleanProps[n] = stepProps[n] = props[n];\n      if (initProps[n] !== undefined) {\n        continue;\n      }\n      initValue = undefined; // accessing missing properties on DOMElements when using CSSPlugin is INSANELY expensive, so we let the plugin take a first swing at it.\n      if (plugins) {\n        for (i = plugins.length - 1; i >= 0; i--) {\n          value = plugins[i].init(this, n, initValue);\n          if (value !== undefined) {\n            initValue = value;\n          }\n          if (initValue === Tween.IGNORE) {\n            (ignored = ignored || {})[n] = true;\n            delete stepProps[n];\n            delete cleanProps[n];\n            break;\n          }\n        }\n      }\n      if (initValue !== Tween.IGNORE) {\n        if (initValue === undefined) {\n          initValue = target[n];\n        }\n        oldProps[n] = initValue === undefined ? null : initValue;\n      }\n    }\n    for (n in cleanProps) {\n      value = props[n];\n\n      // propagate old value to previous steps:\n      let o,\n        prev = oldStep;\n      while ((o = prev) && (prev = o.prev)) {\n        if (prev.props === o.props) {\n          continue;\n        } // wait step\n        if (prev.props[n] !== undefined) {\n          break;\n        } // already has a value, we're done.\n        prev.props[n] = oldProps[n];\n      }\n    }\n    if (stepPlugins && (plugins = this._plugins)) {\n      for (i = plugins.length - 1; i >= 0; i--) {\n        plugins[i].step(this, step, cleanProps);\n      }\n    }\n    if (inject = this._injected) {\n      this._injected = null;\n      this._appendProps(inject, step, false);\n    }\n  }\n\n  /**\n   * Used by plugins to inject properties onto the current step. Called from within `Plugin.step` calls.\n   * For example, a plugin dealing with color, could read a hex color, and inject red, green, and blue props into the tween.\n   * See the SamplePlugin for more info.\n   * @see tweenjs.SamplePlugin\n   * @private\n   * @param {String} name\n   * @param {Object} value\n   */\n  _injectProp(name, value) {\n    let o = this._injected || (this._injected = {});\n    o[name] = value;\n  }\n\n  /**\n   * @private\n   * @param {Number} duration\n   * @param {Object} props\n   * @param {Function} ease\n   * @param {Boolean} [passive=false]\n   */\n  _addStep(duration, props, ease) {\n    let passive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    let step = new TweenStep(this._stepTail, this.duration, duration, props, ease, passive);\n    this.duration += duration;\n    return this._stepTail = this._stepTail.next = step;\n  }\n\n  /**\n   * @private\n   * @param {Object} scope\n   * @param {Function} funct\n   * @param {Array} params\n   */\n  _addAction(scope, funct, params) {\n    let action = new TweenAction(this._actionTail, this.duration, scope, funct, params);\n    if (this._actionTail) {\n      this._actionTail.next = action;\n    } else {\n      this._actionHead = action;\n    }\n    this._actionTail = action;\n    return this;\n  }\n\n  /**\n   * @private\n   * @param {Object} props\n   */\n  _set(props) {\n    for (let n in props) {\n      this[n] = props[n];\n    }\n  }\n\n  /**\n   * @private\n   * @param {Object} props\n   */\n  _cloneProps(props) {\n    let o = {};\n    for (let n in props) {\n      o[n] = props[n];\n    }\n    return o;\n  }\n}\n\n// tiny api (primarily for tool output):\n{\n  let p = Tween.prototype;\n  p.w = p.wait;\n  p.t = p.to;\n  p.c = p.call;\n  p.s = p.set;\n}\n\n// static properties\n/**\n * Constant returned by plugins to tell the tween not to use default assignment.\n * @property IGNORE\n * @type {Object}\n * @static\n */\nTween.IGNORE = {};\n\n/**\n * @property _listeners\n * @type {Tween[]}\n * @static\n * @private\n */\nTween._tweens = [];\n\n/**\n * @property _plugins\n * @type {Object}\n * @static\n * @private\n */\nTween._plugins = null;\n\n/**\n * @property _tweenHead\n * @type {Tween}\n * @static\n * @private\n */\nTween._tweenHead = null;\n\n/**\n * @property _tweenTail\n * @type {Tween}\n * @static\n * @private\n */\nTween._tweenTail = null;\n\n// helpers:\n\n/**\n * @private\n * @param {*} prev\n * @param {*} t\n * @param {*} d\n * @param {*} props\n * @param {*} ease\n * @param {*} passive\n */\nclass TweenStep {\n  constructor(prev, t, d, props, ease, passive) {\n    this.next = null;\n    this.prev = prev;\n    this.t = t;\n    this.d = d;\n    this.props = props;\n    this.ease = ease;\n    this.passive = passive;\n    this.index = prev ? prev.index + 1 : 0;\n  }\n}\n\n/**\n * @private\n * @param {*} prev\n * @param {*} t\n * @param {*} scope\n * @param {*} funct\n * @param {*} params\n */\nclass TweenAction {\n  constructor(prev, t, scope, funct, params) {\n    this.next = null;\n    this.d = 0;\n    this.prev = prev;\n    this.t = t;\n    this.scope = scope;\n    this.funct = funct;\n    this.params = params;\n  }\n}","map":{"version":3,"names":["AbstractTween","linear","Ticker","Tween","constructor","target","props","pluginData","passive","_stepHead","TweenStep","_stepTail","_stepPosition","_actionHead","_actionTail","_plugins","_pluginIds","_injected","override","removeTweens","_init","get","tick","delta","paused","tween","_tweenHead","next","_next","ignoreGlobalPause","_paused","advance","useTicks","handleEvent","event","type","tweenjs_count","removeAllTweens","_prev","_tweenTail","hasActiveTweens","installPlugin","plugin","install","priority","arr","i","l","length","splice","_register","tail","_inited","addEventListener","prev","wait","duration","_addStep","to","ease","step","_appendProps","label","name","addLabel","call","callback","params","scope","_addAction","set","_set","play","pause","clone","_addPlugin","ids","id","plugins","push","_updatePosition","jump","end","t","position","d","stepNext","ratio","_updateTargetProps","v","v0","v1","p0","p1","proploop","n","value","change","IGNORE","undefined","_runActionsRange","startPos","endPos","includeStart","rev","action","ePos","sPos","pos","funct","apply","stepPlugins","initProps","initValue","inject","oldStep","oldProps","stepProps","_cloneProps","cleanProps","hasOwnProperty","init","ignored","o","_injectProp","TweenAction","p","prototype","w","c","s","_tweens","index"],"sources":["/Users/robert_castro/their-3d-library-robertc-team/node_modules/@createjs/tweenjs/src/Tween.js"],"sourcesContent":["/**\n * @license Tween\n * Visit http://createjs.com/ for documentation, updates and examples.\n *\n * Copyright (c) 2017 gskinner.com, inc.\n *\n * Permission is hereby granted, free of charge, to any person\n * obtaining a copy of this software and associated documentation\n * files (the \"Software\"), to deal in the Software without\n * restriction, including without limitation the rights to use,\n * copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following\n * conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n * OTHER DEALINGS IN THE SOFTWARE.\n */\n\nimport AbstractTween from \"./AbstractTween\";\nimport { linear } from \"./Ease\";\nimport Ticker from \"@createjs/core/src/utils/Ticker\";\n\n/**\n * Tweens properties for a single target. Methods can be chained to create complex animation sequences:\n *\n * @example\n * Tween.get(target)\n *   .wait(500)\n *   .to({ alpha: 0, visible: false }, 1000)\n *   .call(handleComplete);\n *\n * Multiple tweens can share a target, however if they affect the same properties there could be unexpected\n * behaviour. To stop all tweens on an object, use {@link tweenjs.Tween#removeTweens} or pass `override:true`\n * in the props argument.\n *\n * \tcreatejs.Tween.get(target, {override:true}).to({x:100});\n *\n * Subscribe to the {@link tweenjs.Tween#event:change} event to be notified when the tween position changes.\n *\n * \tcreatejs.Tween.get(target, {override:true}).to({x:100}).addEventListener(\"change\", handleChange);\n * \tfunction handleChange(event) {\n * \t\t// The tween changed.\n * \t}\n *\n * @see {@link tweenjs.Tween.get}\n *\n * @memberof tweenjs\n * @extends tweenjs.AbstractTween\n *\n * @param {Object} target The target object that will have its properties tweened.\n * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n * @param {Boolean} [props.useTicks]\n * @param {Boolean} [props.ignoreGlobalPause]\n * @param {Number|Boolean} [props.loop]\n * @param {Boolean} [props.reversed]\n * @param {Boolean} [props.bounce]\n * @param {Number} [props.timeScale]\n * @param {Object} [props.pluginData]\n * @param {Boolean} [props.paused]\n * @param {*} [props.position] indicates the initial position for this tween\n * @param {*} [props.onChange] adds the specified function as a listener to the `change` event\n * @param {*} [props.onComplete] adds the specified function as a listener to the `complete` event\n * @param {*} [props.override] if true, removes all existing tweens for the target\n */\nexport default class Tween extends AbstractTween {\n\n\tconstructor (target, props) {\n\t\tsuper(props);\n\n\t\t/**\n\t\t * Allows you to specify data that will be used by installed plugins. Each plugin uses this differently, but in general\n\t\t * you specify data by assigning it to a property of `pluginData` with the same name as the plugin.\n\t\t * Note that in many cases, this data is used as soon as the plugin initializes itself for the tween.\n\t\t * As such, this data should be set before the first `to` call in most cases.\n\t\t *\n\t\t * Some plugins also store working data in this object, usually in a property named `_PluginClassName`.\n\t\t * See the documentation for individual plugins for more details.\n\t\t *\n\t\t * @example\n\t\t * myTween.pluginData.SmartRotation = data;\n\t\t * myTween.pluginData.SmartRotation_disabled = true;\n\t\t *\n\t\t *\n\t\t * @default null\n\t\t * @type {Object}\n\t\t */\n\t\tthis.pluginData = null;\n\n\t\t/**\n\t\t * The target of this tween. This is the object on which the tweened properties will be changed.\n\t\t * @type {Object}\n\t\t * @readonly\n\t\t */\n\t\tthis.target = target;\n\n\t\t/**\n\t\t * Indicates the tween's current position is within a passive wait.\n\t\t * @type {Boolean}\n\t\t * @default false\n\t\t * @readonly\n\t\t */\n\t\tthis.passive = false;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {TweenStep}\n\t\t */\n\t\tthis._stepHead = new TweenStep(null, 0, 0, {}, null, true);\n\n\t\t/**\n\t\t * @private\n\t\t * @type {TweenStep}\n\t\t */\n\t\tthis._stepTail = this._stepHead;\n\n\t\t/**\n\t\t * The position within the current step. Used by MovieClip.\n\t\t * @private\n\t\t * @type {Number}\n\t\t * @default 0\n\t\t */\n\t\tthis._stepPosition = 0;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {TweenAction}\n\t\t * @default null\n\t\t */\n\t\tthis._actionHead = null;\n\n\t\t/**\n\t\t * @private\n\t\t * @type {TweenAction}\n\t\t * @default null\n\t\t */\n\t\tthis._actionTail = null;\n\n\t\t/**\n\t\t * Plugins added to this tween instance.\n\t\t * @private\n\t\t * @type {Object[]}\n\t\t * @default null\n\t\t */\n\t\tthis._plugins = null;\n\n\t\t/**\n\t\t * Hash for quickly looking up added plugins. Null until a plugin is added.\n\t\t * @private\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._pluginIds = null;\n\n\n\t\t/**\n\t\t * Used by plugins to inject new properties.\n\t\t * @private\n\t\t * @type {Object}\n\t\t * @default null\n\t\t */\n\t\tthis._injected = null;\n\n\t\tif (props) {\n\t\t\tthis.pluginData = props.pluginData;\n\t\t\tif (props.override) { Tween.removeTweens(target); }\n\t\t}\n\t\tif (!this.pluginData) { this.pluginData = {}; }\n\n\t\tthis._init(props);\n\t}\n\n\t/**\n\t * Returns a new tween instance. This is functionally identical to using `new Tween(...)`, but may look cleaner\n\t * with the chained syntax of TweenJS.\n\t *\n\t * @static\n\t * @example\n\t * let tween = Tween.get(target).to({ x: 100 }, 500);\n\t * // equivalent to:\n\t * let tween = new Tween(target).to({ x: 100 }, 500);\n\t *\n\t * @param {Object} target The target object that will have its properties tweened.\n\t * @param {Object} [props] The configuration properties to apply to this instance (ex. `{loop:-1, paused:true}`).\n\t * @param {Boolean} [props.useTicks]\n\t * @param {Boolean} [props.ignoreGlobalPause]\n\t * @param {Number|Boolean} [props.loop]\n\t * @param {Boolean} [props.reversed]\n\t * @param {Boolean} [props.bounce]\n\t * @param {Number} [props.timeScale]\n\t * @param {Object} [props.pluginData]\n\t * @param {Boolean} [props.paused]\n\t * @param {*} [props.position] indicates the initial position for this tween\n\t * @param {*} [props.onChange] adds the specified function as a listener to the `change` event\n\t * @param {*} [props.onComplete] adds the specified function as a listener to the `complete` event\n\t * @param {*} [props.override] if true, removes all existing tweens for the target\n\t * @return {Tween} A reference to the created tween.\n\t */\n\tstatic get (target, props) {\n\t\treturn new Tween(target, props);\n\t}\n\n\t/**\n\t * Advances all tweens. This typically uses the {{#crossLink \"Ticker\"}}{{/crossLink}} class, but you can call it\n\t * manually if you prefer to use your own \"heartbeat\" implementation.\n\t *\n\t * @static\n\t *\n\t * @param {Number} delta The change in time in milliseconds since the last tick. Required unless all tweens have\n\t * `useTicks` set to true.\n\t * @param {Boolean} paused Indicates whether a global pause is in effect. Tweens with {@link tweenjs.Tween#ignoreGlobalPause}\n\t * will ignore this, but all others will pause if this is `true`.\n\t */\n\tstatic tick (delta, paused) {\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next; // in case it completes and wipes its _next property\n\t\t\tif ((paused && !tween.ignoreGlobalPause) || tween._paused) { /* paused */ }\n\t\t\telse { tween.advance(tween.useTicks ? 1: delta); }\n\t\t\ttween = next;\n\t\t}\n\t}\n\n\t/**\n\t * Handle events that result from Tween being used as an event handler. This is included to allow Tween to handle\n\t * {@link tweenjs.Ticker#event:tick} events from the {@link tweenjs.Ticker}.\n\t * No other events are handled in Tween.\n\t *\n\t * @static\n\t * @since 0.4.2\n\t *\n\t * @param {Object} event An event object passed in by the {@link core.EventDispatcher}. Will\n\t * usually be of type \"tick\".\n\t */\n\tstatic handleEvent (event) {\n\t\tif (event.type === \"tick\") {\n\t\t\tthis.tick(event.delta, event.paused);\n\t\t}\n\t}\n\n\t/**\n\t * Removes all existing tweens for a target. This is called automatically by new tweens if the `override`\n\t * property is `true`.\n\t *\n\t * @static\n\t *\n\t * @param {Object} target The target object to remove existing tweens from.=\n\t */\n\tstatic removeTweens (target) {\n\t\tif (!target.tweenjs_count) { return; }\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next;\n\t\t\tif (tween.target === target) { tween.paused = true; }\n\t\t\ttween = next;\n\t\t}\n\t\ttarget.tweenjs_count = 0;\n\t}\n\n\t/**\n\t * Stop and remove all existing tweens.\n\t *\n\t * @static\n\t * @since 0.4.1\n\t */\n\tstatic removeAllTweens () {\n\t\tlet tween = Tween._tweenHead;\n\t\twhile (tween) {\n\t\t\tlet next = tween._next;\n\t\t\ttween._paused = true;\n\t\t\ttween.target && (tween.target.tweenjs_count = 0);\n\t\t\ttween._next = tween._prev = null;\n\t\t\ttween = next;\n\t\t}\n\t\tTween._tweenHead = Tween._tweenTail = null;\n\t}\n\n\t/**\n\t * Indicates whether there are any active tweens on the target object (if specified) or in general.\n\t *\n\t * @static\n\t *\n\t * @param {Object} [target] The target to check for active tweens. If not specified, the return value will indicate\n\t * if there are any active tweens on any target.\n\t * @return {Boolean} Indicates if there are active tweens.\n\t */\n\tstatic hasActiveTweens (target) {\n\t\tif (target) { return !!target.tweenjs_count; }\n\t\treturn !!Tween._tweenHead;\n\t}\n\n\t/**\n\t * Installs a plugin, which can modify how certain properties are handled when tweened. See the {{#crossLink \"SamplePlugin\"}}{{/crossLink}}\n\t * for an example of how to write TweenJS plugins. Plugins should generally be installed via their own `install` method, in order to provide\n\t * the plugin with an opportunity to configure itself.\n\t *\n\t * @static\n\t *\n\t * @param {Object} plugin The plugin to install\n\t * @param {Object} props The props to pass to the plugin\n\t */\n\tstatic installPlugin (plugin, props) {\n\t\tplugin.install(props);\n\t\tconst priority = (plugin.priority = plugin.priority || 0), arr = (Tween._plugins = Tween._plugins || []);\n\t\tfor (let i = 0, l = arr.length; i < l; i++) {\n\t\t\tif (priority < arr[i].priority) { break; }\n\t\t}\n\t\tarr.splice(i, 0, plugin);\n\t}\n\n\t/**\n\t * Registers or unregisters a tween with the ticking system.\n\t *\n\t * @private\n\t * @static\n\t *\n\t * @param {Tween} tween The tween instance to register or unregister.\n\t * @param {Boolean} paused If `false`, the tween is registered. If `true` the tween is unregistered.\n\t */\n\tstatic _register (tween, paused) {\n\t\tconst target = tween.target;\n\t\tif (!paused && tween._paused) {\n\t\t\t// TODO: this approach might fail if a dev is using sealed objects\n\t\t\tif (target) { target.tweenjs_count = target.tweenjs_count ? target.tweenjs_count + 1 : 1; }\n\t\t\tlet tail = Tween._tweenTail;\n\t\t\tif (!tail) { Tween._tweenHead = Tween._tweenTail = tween; }\n\t\t\telse {\n\t\t\t\tTween._tweenTail = tail._next = tween;\n\t\t\t\ttween._prev = tail;\n\t\t\t}\n\t\t\tif (!Tween._inited) { Ticker.addEventListener(\"tick\", Tween); Tween._inited = true; }\n\t\t} else if (paused && !tween._paused) {\n\t\t\tif (target) { target.tweenjs_count--; }\n\t\t\tlet next = tween._next, prev = tween._prev;\n\n\t\t\tif (next) { next._prev = prev; }\n\t\t\telse { Tween._tweenTail = prev; } // was tail\n\t\t\tif (prev) { prev._next = next; }\n\t\t\telse { Tween._tweenHead = next; } // was head.\n\n\t\t\ttween._next = tween._prev = null;\n\t\t}\n\t}\n\n\t/**\n\t * Adds a wait (essentially an empty tween).\n\t *\n\t * @example\n\t * // This tween will wait 1s before alpha is faded to 0.\n\t * Tween.get(target)\n\t *   .wait(1000)\n\t *   .to({ alpha: 0 }, 1000);\n\t *\n\t * @param {Number} duration The duration of the wait in milliseconds (or in ticks if `useTicks` is true).\n\t * @param {Boolean} [passive=false] Tween properties will not be updated during a passive wait. This\n\t * is mostly useful for use with {@link tweenjs.Timeline} instances that contain multiple tweens\n\t * affecting the same target at different times.\n\t * @chainable\n\t */\n\twait (duration, passive = false) {\n\t\tif (duration > 0) { this._addStep(+duration, this._stepTail.props, null, passive); }\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a tween from the current values to the specified properties. Set duration to 0 to jump to these value.\n\t * Numeric properties will be tweened from their current value in the tween to the target value. Non-numeric\n\t * properties will be set at the end of the specified duration.\n\t *\n\t * @example\n\t * Tween.get(target)\n\t *   .to({ alpha: 0, visible: false }, 1000);\n\t *\n\t * @param {Object} props An object specifying property target values for this tween (Ex. `{x:300}` would tween the x\n\t * property of the target to 300).\n\t * @param {Number} [duration=0] The duration of the tween in milliseconds (or in ticks if `useTicks` is true).\n\t * @param {Function} [ease=Ease.linear] The easing function to use for this tween. See the {@link tweenjs.Ease}\n\t * class for a list of built-in ease functions.\n\t * @chainable\n\t */\n\tto (props, duration = 0, ease = linear) {\n\t\tif (duration < 0) { duration = 0; }\n\t\tconst step = this._addStep(+duration, null, ease);\n\t\tthis._appendProps(props, step);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds a label that can be used with {@link tweenjs.Tween#gotoAndPlay}/{@link tweenjs.Tween#gotoAndStop}\n\t * at the current point in the tween.\n\t *\n\t * @example\n\t * let tween = Tween.get(foo)\n\t *   .to({ x: 100 }, 1000)\n\t *   .label(\"myLabel\")\n\t *   .to({ x: 200 }, 1000);\n\t * // ...\n\t * tween.gotoAndPlay(\"myLabel\"); // would play from 1000ms in.\n\t *\n\t * @param {String} label The label name.\n\t * @chainable\n\t */\n\tlabel (name) {\n\t\tthis.addLabel(name, this.duration);\n\t\treturn this;\n\t}\n\n\t/**\n\t * Adds an action to call the specified function.\n\t *\n\t * @example\n\t * // would call myFunction() after 1 second.\n\t * Tween.get()\n\t *   .wait(1000)\n\t *   .call(myFunction);\n\t *\n\t * @param {Function} callback The function to call.\n\t * @param {Array} [params]. The parameters to call the function with. If this is omitted, then the function\n\t * will be called with a single param pointing to this tween.\n\t * @param {Object} [scope]. The scope to call the function in. If omitted, it will be called in the target's scope.\n\t * @chainable\n\t */\n\tcall (callback, params, scope) {\n\t\treturn this._addAction(scope || this.target, callback, params || [this]);\n\t}\n\n\t/**\n\t * Adds an action to set the specified props on the specified target. If `target` is null, it will use this tween's\n\t * target. Note that for properties on the target object, you should consider using a zero duration {@link tweenjs.Tween#to}\n\t * operation instead so the values are registered as tweened props.\n\t *\n\t * @example\n\t * tween.wait(1000)\n\t *   .set({ visible: false }, foo);\n\t *\n\t * @param {Object} props The properties to set (ex. `{ visible: false }`).\n\t * @param {Object} [target] The target to set the properties on. If omitted, they will be set on the tween's target.\n\t * @chainable\n\t */\n\tset (props, target) {\n\t\treturn this._addAction(target || this.target, this._set, [ props ]);\n\t}\n\n\t/**\n\t * Adds an action to play (unpause) the specified tween. This enables you to sequence multiple tweens.\n\t *\n\t * @example\n\t * tween.to({ x: 100 }, 500)\n\t *   .play(otherTween);\n\t *\n\t * @param {Tween} [tween] The tween to play. Defaults to this tween.\n\t * @chainable\n\t */\n\tplay (tween) {\n    return this._addAction(tween || this, this._set, [{ paused: false }]);\n\t}\n\n\t/**\n\t * Adds an action to pause the specified tween.\n\t * At 60fps the tween will advance by ~16ms per tick, if the tween above was at 999ms prior to the current tick, it\n   * will advance to 1015ms (15ms into the second \"step\") and then pause.\n\t *\n\t * @example\n\t * tween.pause(otherTween)\n\t *   .to({ alpha: 1 }, 1000)\n\t *   .play(otherTween);\n\t *\n\t * // Note that this executes at the end of a tween update,\n\t * // so the tween may advance beyond the time the pause action was inserted at.\n   *\n   * tween.to({ foo: 0 }, 1000)\n   *   .pause()\n   *   .to({ foo: 1 }, 1000);\n\t *\n\t * @param {Tween} [tween] The tween to pause. Defaults to this tween.\n\t * @chainable\n\t */\n\tpause (tween) {\n\t\treturn this._addAction(tween || this, this._set, [{ paused: false }]);\n\t}\n\n\t/**\n\t * @throws Tween cannot be cloned.\n\t */\n\tclone () {\n\t\tthrow \"Tween can not be cloned.\";\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} plugin\n\t */\n\t_addPlugin (plugin) {\n\t\tlet ids = this._pluginIds || (this._pluginIds = {}), id = plugin.id;\n\t\tif (!id || ids[id]) { return; } // already added\n\n\t\tids[id] = true;\n\t\tlet plugins = this._plugins || (this._plugins = []), priority = plugin.priority || 0;\n\t\tfor (let i = 0, l = plugins.length; i < l; i++) {\n\t\t\tif (priority < plugins[i].priority) {\n\t\t\t\tplugins.splice(i, 0, plugin);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tplugins.push(plugin);\n\t}\n\n\t/**\n\t * @private\n\t * @param {} jump\n\t * @param {Boolean} end\n   */\n\t_updatePosition (jump, end) {\n\t\tlet step = this._stepHead.next, t = this.position, d = this.duration;\n\t\tif (this.target && step) {\n\t\t\t// find our new step index:\n\t\t\tlet stepNext = step.next;\n\t\t\twhile (stepNext && stepNext.t <= t) { step = step.next; stepNext = step.next; }\n\t\t\tlet ratio = end ? d === 0 ? 1 : t/d : (t-step.t)/step.d; // TODO: revisit this.\n\t\t\tthis._updateTargetProps(step, ratio, end);\n\t\t}\n\t\tthis._stepPosition = step ? t - step.t : 0;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} step\n\t * @param {Number} ratio\n\t * @param {Boolean} end Indicates to plugins that the full tween has ended.\n\t */\n\t_updateTargetProps (step, ratio, end) {\n\t\tif (this.passive = !!step.passive) { return; } // don't update props.\n\n\t\tlet v, v0, v1, ease;\n\t\tlet p0 = step.prev.props;\n\t\tlet p1 = step.props;\n\t\tif (ease = step.ease) { ratio = ease(ratio, 0, 1, 1); }\n\n\t\tlet plugins = this._plugins;\n\t\tproploop : for (let n in p0) {\n\t\t\tv0 = p0[n];\n\t\t\tv1 = p1[n];\n\n\t\t\t// values are different & it is numeric then interpolate:\n\t\t\tif (v0 !== v1 && (typeof(v0) === \"number\")) {\n\t\t\t\tv = v0 + (v1 - v0) * ratio;\n\t\t\t} else {\n\t\t\t\tv = ratio >= 1 ? v1 : v0;\n\t\t\t}\n\n\t\t\tif (plugins) {\n\t\t\t\tfor (let i = 0, l = plugins.length; i < l; i++) {\n\t\t\t\t\tlet value = plugins[i].change(this, step, n, v, ratio, end);\n\t\t\t\t\tif (value === Tween.IGNORE) { continue proploop; }\n\t\t\t\t\tif (value !== undefined) { v = value; }\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.target[n] = v;\n\t\t}\n\n\t}\n\n\t/**\n\t * @private\n\t * @param {Number} startPos\n\t * @param {Number} endPos\n\t * @param {Boolean} includeStart\n\t */\n\t_runActionsRange (startPos, endPos, jump, includeStart) {\n\t\tlet rev = startPos > endPos;\n\t\tlet action = rev ? this._actionTail : this._actionHead;\n\t\tlet ePos = endPos, sPos = startPos;\n\t\tif (rev) { ePos = startPos; sPos = endPos; }\n\t\tlet t = this.position;\n\t\twhile (action) {\n\t\t\tlet pos = action.t;\n\t\t\tif (pos === endPos || (pos > sPos && pos < ePos) || (includeStart && pos === startPos)) {\n\t\t\t\taction.funct.apply(action.scope, action.params);\n\t\t\t\tif (t !== this.position) { return true; }\n\t\t\t}\n\t\t\taction = rev ? action.prev : action.next;\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} props\n\t */\n\t_appendProps (props, step, stepPlugins) {\n\t\tlet initProps = this._stepHead.props, target = this.target, plugins = Tween._plugins;\n\t\tlet n, i, l, value, initValue, inject;\n\n\t\tlet oldStep = step.prev, oldProps = oldStep.props;\n\t\tlet stepProps = step.props || (step.props = this._cloneProps(oldProps));\n\t\tlet cleanProps = {};\n\n\t\tfor (n in props) {\n\t\t\tif (!props.hasOwnProperty(n)) { continue; }\n\t\t\tcleanProps[n] = stepProps[n] = props[n];\n\n\t\t\tif (initProps[n] !== undefined) { continue; }\n\n\t\t\tinitValue = undefined; // accessing missing properties on DOMElements when using CSSPlugin is INSANELY expensive, so we let the plugin take a first swing at it.\n\t\t\tif (plugins) {\n        for (i = plugins.length - 1; i >= 0; i--) {\n\t\t\t\t\tvalue = plugins[i].init(this, n, initValue);\n\t\t\t\t\tif (value !== undefined) { initValue = value; }\n\t\t\t\t\tif (initValue === Tween.IGNORE) {\n\t\t\t\t\t\t(ignored = ignored || {})[n] = true;\n\t\t\t\t\t\tdelete(stepProps[n]);\n\t\t\t\t\t\tdelete(cleanProps[n]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (initValue !== Tween.IGNORE) {\n\t\t\t\tif (initValue === undefined) { initValue = target[n]; }\n\t\t\t\toldProps[n] = (initValue === undefined) ? null : initValue;\n\t\t\t}\n\t\t}\n\n\t\tfor (n in cleanProps) {\n\t\t\tvalue = props[n];\n\n\t\t\t// propagate old value to previous steps:\n\t\t\tlet o, prev = oldStep;\n\t\t\twhile ((o = prev) && (prev = o.prev)) {\n\t\t\t\tif (prev.props === o.props) { continue; } // wait step\n\t\t\t\tif (prev.props[n] !== undefined) { break; } // already has a value, we're done.\n\t\t\t\tprev.props[n] = oldProps[n];\n\t\t\t}\n\t\t}\n\n\t\tif (stepPlugins && (plugins = this._plugins)) {\n      for (i = plugins.length - 1; i >= 0; i--) {\n\t\t\t\tplugins[i].step(this, step, cleanProps);\n\t\t\t}\n\t\t}\n\n\t\tif (inject = this._injected) {\n\t\t\tthis._injected = null;\n\t\t\tthis._appendProps(inject, step, false);\n\t\t}\n\t}\n\n\t/**\n\t * Used by plugins to inject properties onto the current step. Called from within `Plugin.step` calls.\n\t * For example, a plugin dealing with color, could read a hex color, and inject red, green, and blue props into the tween.\n\t * See the SamplePlugin for more info.\n\t * @see tweenjs.SamplePlugin\n\t * @private\n\t * @param {String} name\n\t * @param {Object} value\n\t */\n\t_injectProp (name, value) {\n\t\tlet o = this._injected || (this._injected = {});\n\t\to[name] = value;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Number} duration\n\t * @param {Object} props\n\t * @param {Function} ease\n\t * @param {Boolean} [passive=false]\n\t */\n\t_addStep (duration, props, ease, passive = false) {\n\t\tlet step = new TweenStep(this._stepTail, this.duration, duration, props, ease, passive);\n\t\tthis.duration += duration;\n\t\treturn this._stepTail = (this._stepTail.next = step);\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} scope\n\t * @param {Function} funct\n\t * @param {Array} params\n\t */\n\t_addAction (scope, funct, params) {\n\t\tlet action = new TweenAction(this._actionTail, this.duration, scope, funct, params);\n\t\tif (this._actionTail) { this._actionTail.next = action; }\n\t\telse { this._actionHead = action; }\n\t\tthis._actionTail = action;\n\t\treturn this;\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} props\n\t */\n\t_set (props) {\n\t\tfor (let n in props) {\n\t\t\tthis[n] = props[n];\n\t\t}\n\t}\n\n\t/**\n\t * @private\n\t * @param {Object} props\n\t */\n\t_cloneProps (props) {\n\t\tlet o = {};\n\t\tfor (let n in props) { o[n] = props[n]; }\n\t\treturn o;\n\t}\n\n}\n\n// tiny api (primarily for tool output):\n{\n\tlet p = Tween.prototype;\n\tp.w = p.wait;\n\tp.t = p.to;\n\tp.c = p.call;\n\tp.s = p.set;\n}\n\n// static properties\n/**\n * Constant returned by plugins to tell the tween not to use default assignment.\n * @property IGNORE\n * @type {Object}\n * @static\n */\nTween.IGNORE = {};\n\n/**\n * @property _listeners\n * @type {Tween[]}\n * @static\n * @private\n */\nTween._tweens = [];\n\n/**\n * @property _plugins\n * @type {Object}\n * @static\n * @private\n */\nTween._plugins = null;\n\n/**\n * @property _tweenHead\n * @type {Tween}\n * @static\n * @private\n */\nTween._tweenHead = null;\n\n/**\n * @property _tweenTail\n * @type {Tween}\n * @static\n * @private\n */\nTween._tweenTail = null;\n\n// helpers:\n\n/**\n * @private\n * @param {*} prev\n * @param {*} t\n * @param {*} d\n * @param {*} props\n * @param {*} ease\n * @param {*} passive\n */\nclass TweenStep {\n\n\tconstructor (prev, t, d, props, ease, passive) {\n\t\tthis.next = null;\n\t\tthis.prev = prev;\n\t\tthis.t = t;\n\t\tthis.d = d;\n\t\tthis.props = props;\n\t\tthis.ease = ease;\n\t\tthis.passive = passive;\n\t\tthis.index = prev ? prev.index + 1 : 0;\n\t}\n\n}\n\n/**\n * @private\n * @param {*} prev\n * @param {*} t\n * @param {*} scope\n * @param {*} funct\n * @param {*} params\n */\nclass TweenAction {\n\n\tconstructor (prev, t, scope, funct, params) {\n\t\tthis.next = null;\n\t\tthis.d = 0;\n\t\tthis.prev = prev;\n\t\tthis.t = t;\n\t\tthis.scope = scope;\n\t\tthis.funct = funct;\n\t\tthis.params = params;\n\t}\n\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,MAAM,MAAM,iCAAiC;;AAEpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,MAAMC,KAAK,SAASH,aAAa,CAAC;EAEhDI,WAAW,CAAEC,MAAM,EAAEC,KAAK,EAAE;IAC3B,KAAK,CAACA,KAAK,CAAC;;IAEZ;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,UAAU,GAAG,IAAI;;IAEtB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACF,MAAM,GAAGA,MAAM;;IAEpB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACG,OAAO,GAAG,KAAK;;IAEpB;AACF;AACA;AACA;IACE,IAAI,CAACC,SAAS,GAAG,IAAIC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC;;IAE1D;AACF;AACA;AACA;IACE,IAAI,CAACC,SAAS,GAAG,IAAI,CAACF,SAAS;;IAE/B;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACG,aAAa,GAAG,CAAC;;IAEtB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG,IAAI;;IAEvB;AACF;AACA;AACA;AACA;IACE,IAAI,CAACC,WAAW,GAAG,IAAI;;IAEvB;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,CAACC,QAAQ,G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"},"metadata":{},"sourceType":"module","externalDependencies":[]}