{"ast":null,"code":"/**\n * The scene-manager module serves as an entry point to all scene-related activities, from initialization\n * to access to objects to anything else.\n *\n * The starter version of the scene manager is adapted from the introductory code provided by three.js.\n */\nimport { Scene, PerspectiveCamera, WebGLRenderer, AmbientLight, DirectionalLight } from 'three';\nimport Garnet from '../cast/garnet';\nimport Peridot from '../cast/peridot';\nconst DEFAULT_ROTATION_RATE = 0.01;\nconst createDemoUniverse = _ref => {\n  let {\n    fieldOfView,\n    width,\n    height,\n    nearPlane,\n    farPlane\n  } = _ref;\n  const scene = new Scene();\n  camera.position.z = 30;\n  const renderer = new WebGLRenderer();\n  renderer.setSize(width, height);\n  scene.add(new AmbientLight('white', 0.5));\n  const directionalLight = new DirectionalLight('white', 1);\n  directionalLight.position.set(-1.5, 1, 2);\n  directionalLight.target.position.set(0, 0, 0);\n  scene.add(directionalLight);\n  scene.add(directionalLight.target);\n  const directionalLightFromBehind = new DirectionalLight('white', 1);\n  directionalLight.position.set(-1.5, 1, -2);\n  directionalLight.target.position.set(0, 0, 0);\n  scene.add(directionalLight);\n  scene.add(directionalLight.target);\n  const garnet = new Garnet('gray');\n  scene.add(garnet.mesh);\n  const peridot = new Peridot();\n  scene.add(peridot.group);\n\n  // Turning is a universe-specific behavior: you can decide what these can be.\n  let turning = false;\n  const turn = () => {\n    turning = true;\n  };\n  const stop = () => {\n    turning = false;\n  };\n  const animate = () => {\n    window.requestAnimationFrame(animate);\n    if (turning) {\n      garnet.mesh.rotation.x += DEFAULT_ROTATION_RATE;\n      garnet.mesh.rotation.y += DEFAULT_ROTATION_RATE;\n      peridot.group.rotation.x -= DEFAULT_ROTATION_RATE / 2;\n      peridot.group.rotation.y -= DEFAULT_ROTATION_RATE / 4;\n    }\n    renderer.render(scene, camera);\n  };\n  return {\n    camera,\n    renderer,\n    animate,\n    turn,\n    stop,\n    cast: {\n      garnet,\n      peridot\n    }\n  };\n};\nexport { createDemoUniverse };","map":{"version":3,"names":["Scene","PerspectiveCamera","WebGLRenderer","AmbientLight","DirectionalLight","Garnet","Peridot","DEFAULT_ROTATION_RATE","createDemoUniverse","fieldOfView","width","height","nearPlane","farPlane","scene","camera","position","z","renderer","setSize","add","directionalLight","set","target","directionalLightFromBehind","garnet","mesh","peridot","group","turning","turn","stop","animate","window","requestAnimationFrame","rotation","x","y","render","cast"],"sources":["/Users/robert_castro/their-3d-library-robertc-team/src/universes/demo-universe.js"],"sourcesContent":["/**\n * The scene-manager module serves as an entry point to all scene-related activities, from initialization\n * to access to objects to anything else.\n *\n * The starter version of the scene manager is adapted from the introductory code provided by three.js.\n */\nimport { Scene, PerspectiveCamera, WebGLRenderer, AmbientLight, DirectionalLight } from 'three'\n\nimport Garnet from '../cast/garnet'\nimport Peridot from '../cast/peridot'\n\nconst DEFAULT_ROTATION_RATE = 0.01\n\nconst createDemoUniverse = ({ fieldOfView, width, height, nearPlane, farPlane}) => {\n  const scene = new Scene()\n  camera.position.z = 30\n  const renderer = new WebGLRenderer()\n  renderer.setSize(width, height)\n\n  scene.add(new AmbientLight('white', 0.5))\n\n  const directionalLight = new DirectionalLight('white', 1)\n  directionalLight.position.set(-1.5, 1, 2)\n  directionalLight.target.position.set(0, 0, 0)\n  scene.add(directionalLight)\n  scene.add(directionalLight.target)\n\n  const directionalLightFromBehind = new DirectionalLight('white', 1)\n  directionalLight.position.set(-1.5, 1, -2)\n  directionalLight.target.position.set(0, 0, 0)\n  scene.add(directionalLight)\n  scene.add(directionalLight.target)\n\n  const garnet = new Garnet('gray')\n  scene.add(garnet.mesh)\n\n  const peridot = new Peridot()\n  scene.add(peridot.group)\n\n  // Turning is a universe-specific behavior: you can decide what these can be.\n  let turning = false\n  const turn = () => {\n    turning = true\n  }\n\n  const stop = () => {\n    turning = false\n  }\n\n  const animate = () => {\n    window.requestAnimationFrame(animate)\n\n    if (turning) {\n      garnet.mesh.rotation.x += DEFAULT_ROTATION_RATE\n      garnet.mesh.rotation.y += DEFAULT_ROTATION_RATE\n\n      peridot.group.rotation.x -= DEFAULT_ROTATION_RATE / 2\n      peridot.group.rotation.y -= DEFAULT_ROTATION_RATE / 4\n    }\n\n    renderer.render(scene, camera)\n  }\n\n  return {\n    camera,\n    renderer,\n    animate,\n    turn,\n    stop,\n    cast: {\n      garnet,\n      peridot\n    }\n  }\n}\n\nexport { createDemoUniverse }\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}